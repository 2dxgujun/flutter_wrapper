#!/usr/bin/env sh

##############################################################################
##
##  Flutter start up script for UN*X
##
##  Source: https://github.com/passsy/flutter_wrapper
##
##  Use this flutter wrapper to bundle flutter within your project to make
##  sure everybody builds with the same version. Put `flutterw` into the root
##  of your flutter project and execute it. It will download all dependencies
##  automatically when calling it.
##
##  Inspired by gradle-wrapper.
##
##############################################################################


# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

FLUTTER_DIR_NAME='.flutter'
FLUTTER_DIR="$APP_HOME/$FLUTTER_DIR_NAME"

# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
  cd "$(dirname "$0")"
fi

# Check if flutter executable exists, if not fetch submodule
if [ ! -f "$FLUTTER_DIR/bin/flutter" ]; then
  # Add flutter as submodule and pin that specific version
  git submodule update --init .flutter
fi

# Wrapper tasks done, call flutter binay with all args
set -e
"$FLUTTER_DIR/bin/flutter" "$@"
